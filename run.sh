#!/bin/bash

# ============================================
# Eldoria Analytics üöÄ - Pipeline Completo
# ============================================

INPUT="data/eldoria.csv"
OUTPUT="outputs"
THREADS=8
ARCHIVO_COMPLETO="$OUTPUT/datos_completos.txt"
MIN_SIZE_BYTES=$((3100000000))  # ~3.1GB en bytes

echo "============================================"
echo "üöÄ Iniciando Eldoria Analytics..."
echo "============================================"

# ‚è±Ô∏è Inicio del cron√≥metro global
START_TIME=$(date +%s)

# --------------------------------------------
# üî® Compilaci√≥n de todos los programas
# --------------------------------------------
echo "üî® [#] Compilando programas C++..."

g++ -O3 -fopenmp -std=c++17 scripts/Codigo_Paralelizado.cpp -o scripts/parallel_program || { echo "‚ùå Error al compilar Codigo_Paralelizado"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/conteo_estratos.cpp -o scripts/conteo_estratos || { echo "‚ùå Error al compilar conteo_estratos"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/porcentaje_estratos.cpp -o scripts/porcentaje_estratos || { echo "‚ùå Error al compilar porcentaje_estratos"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/edad_promedio.cpp -o scripts/edad_promedio || { echo "‚ùå Error al compilar edad_promedio"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/edad_mediana.cpp -o scripts/edad_mediana || { echo "‚ùå Error al compilar edad_mediana"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/distribucion_etaria.cpp -o scripts/distribucion_etaria || { echo "‚ùå Error al compilar distribucion_etaria"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/indice_dependencia.cpp -o scripts/indice_dependencia || { echo "‚ùå Error al compilar indice_dependencia"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/top_rutas_global.cpp -o scripts/top_rutas_global || { echo "‚ùå Error al compilar top_rutas_global"; exit 1; }
g++ -O3 -fopenmp -std=c++17 scripts/top_pueblos.cpp -o scripts/top_pueblos || { echo "‚ùå Error al compilar top_pueblos"; exit 1; }

export OMP_NUM_THREADS=$THREADS

# --------------------------------------------
# ‚úÖ Verificar datos_completos.txt
# --------------------------------------------
if [[ -f "$ARCHIVO_COMPLETO" ]]; then
  FILE_SIZE=$(stat -c%s "$ARCHIVO_COMPLETO")
  if (( FILE_SIZE > MIN_SIZE_BYTES )); then
    echo "‚è≠Ô∏è [!] $ARCHIVO_COMPLETO existe y pesa >3.1GB. Saltando generaci√≥n..."
  else
    echo "‚öôÔ∏è [#] Ejecutando C√≥digo Paralelizado..."
    scripts/parallel_program "$INPUT" "$ARCHIVO_COMPLETO" || { echo "‚ùå Error en Codigo_Paralelizado"; exit 1; }
  fi
else
  echo "‚öôÔ∏è [#] Generando datos_completos.txt..."
  scripts/parallel_program "$INPUT" "$ARCHIVO_COMPLETO" || { echo "‚ùå Error en Codigo_Paralelizado"; exit 1; }
fi

# --------------------------------------------
# ‚öôÔ∏è An√°lisis base
# --------------------------------------------
echo "--------------------------------------------"
echo "‚öôÔ∏è [#] Conteo y porcentaje estrato..."
scripts/conteo_estratos "$ARCHIVO_COMPLETO" "$OUTPUT/A_conteo_estratos.csv" || { echo "‚ùå Error en conteo_estratos"; exit 1; }
scripts/porcentaje_estratos "$ARCHIVO_COMPLETO" "$OUTPUT/B_porcentaje_estratos.csv" || { echo "‚ùå Error en porcentaje_estratos"; exit 1; }

echo "‚öôÔ∏è [#] Edad promedio..."
scripts/edad_promedio "$ARCHIVO_COMPLETO" "$OUTPUT/C_edad_promedio.csv" || { echo "‚ùå Error en edad_promedio"; exit 1; }

echo "‚öôÔ∏è [#] Edad mediana..."
scripts/edad_mediana "$ARCHIVO_COMPLETO" "$OUTPUT/D_edad_mediana.csv" || { echo "‚ùå Error en edad_mediana"; exit 1; }

echo "‚öôÔ∏è [#] Distribuci√≥n etaria..."
scripts/distribucion_etaria "$ARCHIVO_COMPLETO" "$OUTPUT/E_distribucion_etaria.csv" || { echo "‚ùå Error en distribucion_etaria"; exit 1; }

echo "‚öôÔ∏è [#] √çndice de dependencia..."
scripts/indice_dependencia "$ARCHIVO_COMPLETO" "$OUTPUT/F_indice_dependencia.csv" || { echo "‚ùå Error en indice_dependencia"; exit 1; }

# --------------------------------------------
# ‚öôÔ∏è Generar top rutas (GLOBAL)
# --------------------------------------------
echo "--------------------------------------------"
echo "üö¶ [#] Ejecutando top_rutas_global..."
scripts/top_rutas_global "$ARCHIVO_COMPLETO" "$OUTPUT/top_10000_rutas_origen_destino.csv" || { echo "‚ùå Error en top_rutas_global"; exit 1; }
echo "‚öôÔ∏è [#] Ejecutando top_pueblos..."
scripts/top_pueblos outputs/datos_completos.txt outputs/top_pueblos_mas_visitados.csv || { echo "‚ùå Error en top_pueblos"; exit 1; }
# --------------------------------------------
# üìä Generar gr√°ficos finales
# --------------------------------------------

# ‚è±Ô∏è Fin del cron√≥metro
END_TIME=$(date +%s)
DURATION=$((END_TIME - START_TIME))

echo "--------------------------------------------"
echo "üìä [#] Generando gr√°ficos Python..."
python3 scripts/generate_all_graphs.py "$OUTPUT" || { echo "‚ùå Error generando gr√°ficos"; exit 1; }

echo "========================================================="
echo "‚úÖ üéâ ¬°Proceso completado! Resultados en: $OUTPUT/"
echo "‚è±Ô∏è Tiempo total de ejecuci√≥n: $((DURATION / 60)) min $((DURATION % 60)) s"
echo "========================================================="